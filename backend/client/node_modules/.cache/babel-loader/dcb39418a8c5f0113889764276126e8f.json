{"ast":null,"code":"import _regeneratorRuntime from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addPost),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(Post),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deletePost),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(update),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { takeLatest, takeEvery, put, all } from 'redux-saga/effects';\n\nfunction addPost(action) {\n  var post, url;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          post = JSON.stringify(action.post);\n          _context.prev = 1;\n          url = \"http://localhost:3002/posts/\";\n          _context.next = 5;\n          return fetch(url, {\n            method: 'POST',\n            body: post,\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            return console.log(\"POST Done\", response);\n          });\n\n        case 5:\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](1);\n          alert('error' + _context.t0);\n\n        case 10:\n          _context.next = 12;\n          return put({\n            type: 'ADD_NEW_POST_ASYNC',\n            value: post\n          });\n\n        case 12:\n          window.location.reload('root');\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[1, 7]]);\n}\n\nfunction Post() {\n  var data;\n  return _regeneratorRuntime.wrap(function Post$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"POST is Calling..\");\n          _context2.prev = 1;\n          _context2.next = 4;\n          return fetch(\"http://localhost:3002/posts\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (res) {\n            return res.json();\n          });\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put({\n            type: 'POST_ASYNC',\n            value: data\n          });\n\n        case 7:\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[1, 9]]);\n}\n\nfunction deletePost(action) {\n  return _regeneratorRuntime.wrap(function deletePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log('delete is calling from saga..', action._id);\n          fetch('http://localhost:3002/posts/' + action._id, {\n            method: 'delete'\n          }).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            return console.log(\"Delete Done\", response);\n          });\n          _context3.next = 4;\n          return put({\n            type: 'DELETE_POST'\n          });\n\n        case 4:\n          window.location.reload('root');\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}\n\nfunction update(action) {\n  var data, newPost;\n  return _regeneratorRuntime.wrap(function update$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log('update is from generator function');\n          data = JSON.stringify(action.data);\n          newPost = {\n            title: action.data.title,\n            body: action.data.body\n          };\n          console.log('generator ', newPost);\n          _context4.prev = 4;\n          alert(action.data.id);\n          _context4.next = 8;\n          return fetch('http://localhost:3000/posts/' + action.data.id, {\n            method: 'PATCH',\n            body: [{\n              \"propName\": \"title\",\n              \"value\": data.title\n            }, {\n              \"propName\": \"body\",\n              \"value\": data.body\n            }],\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            return console.log(\"PUT Done\", response);\n          });\n\n        case 8:\n          _context4.next = 13;\n          break;\n\n        case 10:\n          _context4.prev = 10;\n          _context4.t0 = _context4[\"catch\"](4);\n          alert('error' + _context4.t0);\n\n        case 13:\n          _context4.next = 15;\n          return put({\n            type: 'UPDATA_ASYNC'\n          });\n\n        case 15:\n          window.location.reload('root');\n\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this, [[4, 10]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          console.log(\"root saga\");\n          _context5.t0 = all;\n          _context5.next = 4;\n          return takeLatest('POST', Post);\n\n        case 4:\n          _context5.t1 = _context5.sent;\n          _context5.next = 7;\n          return takeEvery('ADD_POST', addPost);\n\n        case 7:\n          _context5.t2 = _context5.sent;\n          _context5.next = 10;\n          return takeEvery('DELETE', deletePost);\n\n        case 10:\n          _context5.t3 = _context5.sent;\n          _context5.next = 13;\n          return takeEvery('UPDATE', update);\n\n        case 13:\n          _context5.t4 = _context5.sent;\n          _context5.t5 = [_context5.t1, _context5.t2, _context5.t3, _context5.t4];\n          _context5.next = 17;\n          return (0, _context5.t0)(_context5.t5);\n\n        case 17:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this);\n}","map":{"version":3,"sources":["/home/rails/demo/redux-react -saga29/src/sagas.js"],"names":["addPost","Post","deletePost","update","rootSaga","takeLatest","takeEvery","put","all","action","post","JSON","stringify","url","fetch","method","body","headers","then","res","json","response","console","log","alert","type","value","window","location","reload","data","_id","newPost","title","id"],"mappings":"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","sourcesContent":["import { takeLatest,takeEvery,put,all} from 'redux-saga/effects';\n\nfunction* addPost(action)\n{\n\tconst post=JSON.stringify(action.post)\n\n\n\ttry{\n\t\tvar url=\"http://localhost:3002/posts/\"\n\t\tyield fetch(url,{\n\t\t\tmethod:'POST',\n\t\t\tbody:post,\n\t\t\theaders: {'Content-Type':'application/json'},\n\t\t})\n\t\t.then(res=>res.json())\n\t\t.then(response => console.log(\"POST Done\",response))\n\t}\n\n\tcatch(err)\n\t{\n\t\talert('error'+err)\n\t}\n\n\tyield put({type:'ADD_NEW_POST_ASYNC',value:post})\n\twindow.location.reload('root')\n}\n\nfunction* Post()\n{\n\tconsole.log(\"POST is Calling..\")\n\ttry{\n\t\tconst data =  yield fetch(\"http://localhost:3002/posts\",{\n\t\t\tmethod:'GET',\n\t\t\theaders: {'Content-Type':'application/json'},\n\n\t\t}\n\t).then(res=>res.json());\n\t\tyield put({type:'POST_ASYNC',value:data})\n\t}\n\n\tcatch(err){\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* deletePost(action)\n{\n\tconsole.log('delete is calling from saga..',action._id);\n\n\tfetch('http://localhost:3002/posts/'+action._id,{\n\t\tmethod: 'delete',\n\t})\n\t.then(res=>res.json())\n\t.then(response => console.log(\"Delete Done\",response))\n\n\tyield put({type:'DELETE_POST'})\n\twindow.location.reload('root')\n\n}\n\nfunction* update(action){\n\tconsole.log('update is from generator function');\n\tconst data=JSON.stringify(action.data)\n\tconst newPost ={\n\t\ttitle:action.data.title,\n\t\tbody:action.data.body\n\t}\n\tconsole.log('generator ',newPost)\n\n\ttry{\n\t\talert(action.data.id)\n\t\tyield fetch('http://localhost:3000/posts/'+action.data.id,{\n\t\t\tmethod: 'PATCH',\n\t\t\tbody:[{\"propName\":\"title\",\"value\":data.title},{\"propName\":\"body\",\"value\":data.body}],\n\t\t\theaders: {'Content-Type':'application/json'},\n\t\t})\n\t\t.then(res=>res.json())\n\t\t.then(response => console.log(\"PUT Done\",response))\n\t}\n\n\tcatch(err){\n\n\t\talert('error'+err)\n\t}\n\n\tyield put({type:'UPDATA_ASYNC'})\n\twindow.location.reload('root')\n\n}\n\nexport default function* rootSaga(){\n\tconsole.log(\"root saga\")\n\tyield all([\n\t\tyield takeLatest('POST',Post),\n\t\tyield takeEvery('ADD_POST',addPost),\n\t\tyield takeEvery('DELETE',deletePost),\n\t\tyield takeEvery('UPDATE',update)\n\t])\n}"]},"metadata":{},"sourceType":"module"}