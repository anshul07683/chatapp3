{"ast":null,"code":"import _regeneratorRuntime from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addPost),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(Post),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deletePost),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(update),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(add_user),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { takeLatest, takeEvery, put, all } from 'redux-saga/effects';\n\nfunction addPost(action) {\n  var post, url;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          post = JSON.stringify(action.post);\n          _context.prev = 1;\n          url = \"http://localhost:3003/posts/\";\n          _context.next = 5;\n          return fetch(url, {\n            method: 'POST',\n            body: post,\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': 'Bearer' + action.token\n            }\n          }).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            return console.log(\"POST Done\", response);\n          });\n\n        case 5:\n          _context.next = 10;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](1);\n          alert('error' + _context.t0);\n\n        case 10:\n          _context.next = 12;\n          return put({\n            type: 'ADD_NEW_POST_ASYNC',\n            value: post\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[1, 7]]);\n}\n\nfunction Post() {\n  var data;\n  return _regeneratorRuntime.wrap(function Post$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"POST is Calling..\");\n          _context2.prev = 1;\n          _context2.next = 4;\n          return fetch(\"http://localhost:3003/posts\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (res) {\n            return res.json();\n          });\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put({\n            type: 'POST_ASYNC',\n            value: data\n          });\n\n        case 7:\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[1, 9]]);\n}\n\nfunction deletePost(action) {\n  return _regeneratorRuntime.wrap(function deletePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log('delete is calling from saga..', action._id);\n          fetch('http://localhost:3003/posts/' + action._id, {\n            method: 'delete'\n          }).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            return console.log(\"Delete Done\", response);\n          });\n          _context3.next = 4;\n          return put({\n            type: 'DELETE_POST'\n          });\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}\n\nfunction update(action) {\n  var data;\n  return _regeneratorRuntime.wrap(function update$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log('update is from generator function');\n          data = JSON.stringify(action.data);\n          _context4.prev = 2;\n          alert(data);\n          _context4.next = 6;\n          return fetch('http://localhost:3003/posts/' + action.data.id, {\n            method: 'POST',\n            body: data,\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            return console.log(\"PUT Done\", response);\n          });\n\n        case 6:\n          _context4.next = 11;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](2);\n          alert('error-------' + _context4.t0);\n\n        case 11:\n          _context4.next = 13;\n          return put({\n            type: 'UPDATA_ASYNC'\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, this, [[2, 8]]);\n}\n\nfunction add_user(action) {\n  var user;\n  return _regeneratorRuntime.wrap(function add_user$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          user = JSON.stringify(action.userData);\n          console.log(user);\n          _context5.prev = 2;\n          _context5.next = 5;\n          return fetch('http://localhost:3003/user/signup', {\n            method: 'POST',\n            body: user,\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            return console.log(\"user createddsfdsfff\", response);\n          });\n\n        case 5:\n          _context5.next = 10;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](2);\n          alert('error' + _context5.t0);\n\n        case 10:\n          _context5.next = 12;\n          return put({\n            type: 'ADD_NEW_USER',\n            value: user\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, this, [[2, 7]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          console.log(\"root saga\");\n          _context6.t0 = all;\n          _context6.next = 4;\n          return takeLatest('POST', Post);\n\n        case 4:\n          _context6.t1 = _context6.sent;\n          _context6.next = 7;\n          return takeLatest('ADD_POST', addPost);\n\n        case 7:\n          _context6.t2 = _context6.sent;\n          _context6.next = 10;\n          return takeEvery('DELETE', deletePost);\n\n        case 10:\n          _context6.t3 = _context6.sent;\n          _context6.next = 13;\n          return takeEvery('UPDATE', update);\n\n        case 13:\n          _context6.t4 = _context6.sent;\n          _context6.next = 16;\n          return takeEvery('ADD_USER', add_user);\n\n        case 16:\n          _context6.t5 = _context6.sent;\n          _context6.t6 = [_context6.t1, _context6.t2, _context6.t3, _context6.t4, _context6.t5];\n          _context6.next = 20;\n          return (0, _context6.t0)(_context6.t6);\n\n        case 20:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, this);\n}","map":{"version":3,"sources":["/home/rails/demo/redux-react -saga29/src/sagas.js"],"names":["addPost","Post","deletePost","update","add_user","rootSaga","takeLatest","takeEvery","put","all","action","post","JSON","stringify","url","fetch","method","body","headers","token","then","res","json","response","console","log","alert","type","value","data","_id","id","user","userData"],"mappings":"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","sourcesContent":["import { takeLatest,takeEvery,put,all} from 'redux-saga/effects';\n\nfunction* addPost(action)\n{\n\tconst post=JSON.stringify(action.post)\n\n\n\ttry{\n\t\tvar url=\"http://localhost:3003/posts/\"\n\t\tyield fetch(url,{\n\t\t\tmethod:'POST',\n\t\t\tbody:post,\n\t\t\theaders: {'Content-Type':'application/json',\n\t\t\t\t\t'Authorization':'Bearer'+action.token\n\t\t\t},\n\t\t})\n\t\t.then(res=>res.json())\n\t\t.then(response => console.log(\"POST Done\",response))\n\t}\n\n\tcatch(err)\n\t{\n\t\talert('error'+err)\n\t}\n\n\tyield put({type:'ADD_NEW_POST_ASYNC',value:post})\n\t//window.location.reload('root')\n}\n\nfunction* Post()\n{\n\tconsole.log(\"POST is Calling..\")\n\ttry{\n\t\tconst data =  yield fetch(\"http://localhost:3003/posts\",{\n\t\t\tmethod:'GET',\n\t\t\theaders: {'Content-Type':'application/json'},\n\n\t\t}\n\t).then(res=>res.json());\n\t\tyield put({type:'POST_ASYNC',value:data})\n\t}\n\n\tcatch(err){\n\t\tconsole.log(err);\n\t}\n}\n\nfunction* deletePost(action)\n{\n\tconsole.log('delete is calling from saga..',action._id);\n\n\tfetch('http://localhost:3003/posts/'+action._id,{\n\t\tmethod: 'delete',\n\t})\n\t.then(res=>res.json())\n\t.then(response => console.log(\"Delete Done\",response))\n\n\tyield put({type:'DELETE_POST'})\n\t//window.location.reload('root')\n\n}\n\nfunction* update(action){\n\tconsole.log('update is from generator function');\n\tconst data = JSON.stringify(action.data)\n\n\ttry{\n\t\talert(data)\n\n\t\tyield fetch('http://localhost:3003/posts/'+action.data.id,{\n\t\t\tmethod: 'POST',\n\t\t\tbody:data,\n\t\t\theaders: {'Content-Type':'application/json'},\n\t\t})\n\t\t.then(res=>res.json())\n\t\t.then(response => console.log(\"PUT Done\",response))\n\t}\n\tcatch(err){\n\t\talert('error-------'+err)\n\t}\n\tyield put({type:'UPDATA_ASYNC'})\n\t//window.location.reload('root')\n}\n\nfunction* add_user(action){\n\tconst user=JSON.stringify(action.userData)\n\tconsole.log(user)\n\ttry{\n\t\tyield fetch('http://localhost:3003/user/signup',{\n\t\t\tmethod:'POST',\n\t\t\tbody:user,\n\t\t\theaders: {'Content-Type':'application/json'}\n\t\t})\n\t\t.then(res=>res.json())\n\t\t.then(response => console.log(\"user createddsfdsfff\",response))\n\t}\n\n\tcatch(err)\n\t{\n\t\talert('error'+err)\n\t}\n\tyield put({type:'ADD_NEW_USER',value:user})\n\n}\n\n\n\nexport default function* rootSaga(){\n\tconsole.log(\"root saga\")\n\tyield all([\n\t\tyield takeLatest('POST',Post),\n\t\tyield takeLatest('ADD_POST',addPost),\n\t\tyield takeEvery('DELETE',deletePost),\n\t\tyield takeEvery('UPDATE',update),\n\t\tyield takeEvery('ADD_USER',add_user),\n\n\t])\n}"]},"metadata":{},"sourceType":"module"}