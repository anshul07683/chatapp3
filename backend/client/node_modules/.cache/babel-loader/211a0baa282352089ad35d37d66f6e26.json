{"ast":null,"code":"import _defineProperty from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/rails/demo/redux-react -saga29/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/rails/demo/redux-react -saga29/src/component/PostForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\n\nvar PostForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostForm, _Component);\n\n  function PostForm(props) {\n    var _this;\n\n    _classCallCheck(this, PostForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostForm).call(this, props));\n    _this.state = {\n      title: null,\n      body: null,\n      postImage: \"\"\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PostForm, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n\n      if (this.state.title && this.state.body != null) {\n        var post = {\n          title: this.state.title,\n          body: this.state.body,\n          postImage: this.state.body\n        };\n        this.props.createPost(post);\n      } else alert('Title or Body can not be Empty');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"PostForm\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Title: \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Body: \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"body\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" Image \"), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"postImage\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PostForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    items: state.items\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createPost: function createPost(post) {\n      return dispatch({\n        type: 'ADD_POST',\n        post: post\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","map":{"version":3,"sources":["/home/rails/demo/redux-react -saga29/src/component/PostForm.js"],"names":["React","Component","connect","PostForm","props","state","title","body","postImage","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","post","createPost","alert","mapStateToProps","items","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React,{ Component } from \"react\";\r\nimport {connect } from 'react-redux';\r\n\r\nclass PostForm extends Component{\r\n  constructor(props){\r\n\t  super(props);\r\n\t  this.state = {\r\n      title:null,\r\n\t\t\tbody:null,\r\n\t\t\tpostImage:\"\"\r\n\t\t}\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e){\r\n\t  this.setState({[e.target.name]:e.target.value});\r\n  }\r\n\r\n  onSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tif(this.state.title && this.state.body!=null){\r\n\t\t\tconst post = {\r\n\t\t\t\ttitle:this.state.title,\r\n\t\t\t\tbody : this.state.body,\r\n\t\t\t\tpostImage:this.state.body\r\n\t\t\t}\r\n\t\t\tthis.props.createPost(post);\r\n\t\t}\r\n\t\telse alert('Title or Body can not be Empty')\r\n\t}\r\n\r\n  render(){\r\n\t  return(\r\n\t    <div>\r\n\t\t    <h1>PostForm</h1>\r\n\t\t    <form onSubmit={this.onSubmit}>\r\n\t\t      <div>\r\n\t\t\t      <label>Title: </label><br/>\r\n\t\t\t      <input type=\"text\" name=\"title\"   onChange={this.onChange}/>\r\n\t\t\t    </div> <br/>\r\n\t\t      <div>\r\n\t\t\t\t\t\t<label>Body: </label><br/>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"body\" onChange={this.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<br/>\r\n\r\n\t\t\t\t\t<label> Image </label>\r\n\t\t\t\t\t<input type=\"file\" name=\"postImage\" onChange={this.onChange}/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<button type=\"submit\" >Submit</button>\r\n\t\t\t\t\t<br/>\r\n\t\t    </form>\r\n\t    </div>\r\n\t  );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n\treturn {\r\n\t\titems:state.items,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps =  dispatch =>{\r\n\treturn{\r\n\t\tcreatePost:(post) =>dispatch({type:'ADD_POST',post})\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PostForm);"]},"metadata":{},"sourceType":"module"}