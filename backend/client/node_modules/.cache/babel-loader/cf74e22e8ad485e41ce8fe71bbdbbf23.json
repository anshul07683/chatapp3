{"ast":null,"code":"import _regeneratorRuntime from \"/home/rails/Desktop/redux-react -saga29/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(addPost),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(Post),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { takeLatest, put, all } from 'redux-saga/effects';\n\nfunction addPost(action) {\n  var post, url;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          post = JSON.stringify(action.post);\n          alert(post);\n          _context.prev = 2;\n          url = \"https://jsonplaceholder.typicode.com/posts\";\n          _context.next = 6;\n          return fetch(url, {\n            method: 'POST',\n            body: post,\n            headers: {\n              'Content_type': 'application/json/string'\n            }\n          }).then(function (res) {\n            return res.json();\n          }).then(function (response) {\n            return console.log(\"Done\", JSON.stringify(response));\n          });\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](2);\n          alert('error' + _context.t0);\n\n        case 11:\n          _context.next = 13;\n          return put({\n            type: 'ADD_POST_ASYNC',\n            value: post\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[2, 8]]);\n}\n\nfunction Post() {\n  var data;\n  return _regeneratorRuntime.wrap(function Post$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(\"POST is Calling..\");\n          _context2.prev = 1;\n          _context2.next = 4;\n          return fetch('http://localhost:3000/posts/').then(function (res) {\n            return res.json();\n          });\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put({\n            type: 'POST_ASYNC',\n            value: data\n          });\n\n        case 7:\n          _context2.next = 12;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.log(_context2.t0);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this, [[1, 9]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(\"root saga\");\n          _context3.t0 = all;\n          _context3.next = 4;\n          return takeLatest('POST', Post);\n\n        case 4:\n          _context3.t1 = _context3.sent;\n          _context3.next = 7;\n          return takeLatest('ADD_POST', addPost);\n\n        case 7:\n          _context3.t2 = _context3.sent;\n          _context3.t3 = [_context3.t1, _context3.t2];\n          _context3.next = 11;\n          return (0, _context3.t0)(_context3.t3);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, this);\n}","map":{"version":3,"sources":["/home/rails/Desktop/redux-react -saga29/src/sagas.js"],"names":["addPost","Post","rootSaga","takeLatest","put","all","action","post","JSON","stringify","alert","url","fetch","method","body","headers","then","res","json","response","console","log","type","value","data"],"mappings":";;;;yBAGUA,O;;;yBAuBAC,I;;;yBAeeC,Q;;AAzCzB,SAASC,UAAT,EAAoBC,GAApB,EAAwBC,GAAxB,QAAkC,oBAAlC;;AAGA,SAAUL,OAAV,CAAkBM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,IAFR,GAEaC,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACC,IAAtB,CAFb;AAGEG,UAAAA,KAAK,CAACH,IAAD,CAAL;AAHF;AAKQI,UAAAA,GALR,GAKY,4CALZ;AAAA;AAMI,iBAAMC,KAAK,CAACD,GAAD,EAAK;AACdE,YAAAA,MAAM,EAAC,MADO;AAEdC,YAAAA,IAAI,EAACP,IAFS;AAGdQ,YAAAA,OAAO,EAAC;AACN,8BAAe;AADT;AAHM,WAAL,CAAL,CAMHC,IANG,CAME,UAAAC,GAAG;AAAA,mBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,WANL,EAOLF,IAPK,CAOA,UAAAG,QAAQ;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBb,IAAI,CAACC,SAAL,CAAeU,QAAf,CAAnB,CAAJ;AAAA,WAPR,CAAN;;AANJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBIT,UAAAA,KAAK,CAAC,qBAAD,CAAL;;AAjBJ;AAAA;AAoBE,iBAAMN,GAAG,CAAC;AAACkB,YAAAA,IAAI,EAAC,gBAAN;AAAuBC,YAAAA,KAAK,EAAChB;AAA7B,WAAD,CAAT;;AApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAuBA,SAAUN,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEImB,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAFJ;AAAA;AAIoB,iBAAMT,KAAK,CAAC,8BAAD,CAAL,CAAsCI,IAAtC,CAA2C,UAAAC,GAAG;AAAA,mBAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,WAA9C,CAAN;;AAJpB;AAIYM,UAAAA,IAJZ;AAAA;AAKM,iBAAMpB,GAAG,CAAC;AAACkB,YAAAA,IAAI,EAAC,YAAN;AAAmBC,YAAAA,KAAK,EAACC;AAAzB,WAAD,CAAT;;AALN;AAAA;AAAA;;AAAA;AAAA;AAAA;AASMJ,UAAAA,OAAO,CAACC,GAAR;;AATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAe,SAAUnB,QAAV;AAAA;AAAA;AAAA;AAAA;AACbkB,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AADa,yBAEPhB,GAFO;AAAA;AAGX,iBAAMF,UAAU,CAAC,MAAD,EAAQF,IAAR,CAAhB;;AAHW;AAAA;AAAA;AAIX,iBAAME,UAAU,CAAC,UAAD,EAAYH,OAAZ,CAAhB;;AAJW;AAAA;AAAA;AAAA;AAEb;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLatest,put,all} from 'redux-saga/effects';\n\n\nfunction* addPost(action)\n{\n  const post=JSON.stringify(action.post)\n  alert(post)\n  try{\n    var url=\"https://jsonplaceholder.typicode.com/posts\"\n    yield fetch(url,{\n      method:'POST',\n      body:post,\n      headers:{\n        'Content_type':'application/json/string'\n      }\n    }).then(res=>res.json())\n    .then(response => console.log(\"Done\",JSON.stringify(response)))\n  }\n  catch(err)\n  {\n    alert('error'+err)\n  }\n\n  yield put({type:'ADD_POST_ASYNC',value:post})\n}\n\nfunction* Post()\n{\n    console.log(\"POST is Calling..\")\n    try{\n      const data =  yield fetch('http://localhost:3000/posts/').then(res=>res.json());\n      yield put({type:'POST_ASYNC',value:data})\n\n    }\n    catch(err){\n      console.log(err);\n    }\n}\n\n\n\nexport default function* rootSaga(){\n  console.log(\"root saga\")\n  yield all([\n    yield takeLatest('POST',Post),\n    yield takeLatest('ADD_POST',addPost)\n  ])\n\n}"]},"metadata":{},"sourceType":"module"}